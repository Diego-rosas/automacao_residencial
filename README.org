#+TITLE: Projeto automação residencial

* Motivação
Um projeto de automação residencial foi demandado. Primeira coisa que vem em mente é poder controlar as lâmdas de casa individualemente como meio de gerenciar o uso de cargas residenciais, viabilizando a economia de energia elétrica. Assim, pretende-se usar um módulo de ESP01 com relé (vide figura \ref{fig:module_esp01}) para cada ponto de interruptor de lâmpada para poder ter conexão com o computador central (raspberry pi).

* Objetivos
Gerenciar o funcionamento das lâmpadas de casa, cujo funcionamento deve ser por comando de voz ou de forma manual. Este gerenciamento também inclui a formação de relatórios sobre consumo elétrico (estimado) em cada dispositivo, apresentando as informações em histogramas.

* Detalhamento do projeto
** Lâmpadas
*** Descrição do circuito
Um pequeno trafo recebe a energia da tomada, é retificada por uma ponte retificadora e então o módulo relé com o esp8266 controla o chaveamento da lâmpada. Para fazer o controle da lâmpada ser manual torna-se necessário detectar a existência de fase no pino Normalmente Aberto (NA) do relé, como na figura \ref{fig:tomada}.

#+NAME: fig:tomada
#+CAPTION: Circuito a ser implementado para detecção de fase
#+ATTR_LATEX: :width 0.7\textwidth :placement [h!]
[[./tomada.png]]

# Sendo assim, o $\mu C$ precisará de 3 portas digitais para controlar os periféricos e mais talvez duas para poder programar em ISP.
Não é intenção deste projeto confeccionar placa de circuito impresso para simplificar o projeto e também no momento é impossível para mim imprimir sem uma impressora adequada.
*** Componentes utilizados (por lâmpada)
- [X] 1 Trafo de carregador;
- [X] 4 Diodos 1n4007;
- [X] 1 Capacitor eletrolítico (47uF);
- [X] 1 Capacitor cerâmico (100nF);
- [X] 1 Sensor piroelétrico
- [X] 1 Módulo de acionamento de relé por ESP8266 (figura \ref{fig:module_esp01};
- [X] 2 transistores de uso geral para para detecção de fase;
- [X] Resistores diversos
#+NAME: fig:module_esp01
#+CAPTION: Módulo relé com ESP01 utilizado
#+ATTR_LATEX: :width 0.7\textwidth :placement [h!]
[[./module_esp01.png]]

  O módulo de relé possui o esquemático como na figura \ref{schematic_relay}
 #+NAME: fig:schematic_relay
#+CAPTION: Esquema do circuito do módulo com relé
#+ATTR_LATEX: :width 0.7\textwidth :placement [h!]
[[./schematic_relay.png]]

** Descrição do software
O projeto de software é dividor em 3 partes: Conectividade e gerenciamento de ações; GUI; geração de relatórios
*** Conectividade e gerenciamento de ações
Esta parte consiste em fazer os ESP8266 se conectarem com o raspberryPI por rede para estabelecer comunicação (vide figura \ref{fig:lan_concept}) e também consiste nas tomadas de decisão para o raspberryPI, determinando o comportamento de cada lâmpada e dando prioridade aos comandos.
Os esp8266 das tomadas devem entrar em um ponto de acesso central e então ficar à espera de comandos. Ele age como escravo para responder aos comandos do computador central.

#+NAME: fig:lan_concept
#+CAPTION: Visão conceitual para conectividade LAN dos dispositivos
#+ATTR_LATEX: :width 0.7\textwidth :placement [h!]
[[./lan_concept.png]]

- Atividades de pesquisa e implementação:
  + Protocolo de comunicação (http)
    - Usar os esps como servidores, de modo que o raspberry consiga solicitar informações.
  + Secure shell (ssh) para compartilhar tela
  + Programação dos ESP8266
    - frameworks: Arduino, micropython, RTOS?
- Procedimentos a serem utilizados na cpu principal:
  + get state() # Retorna o estado atual lâmpada;
  + turn(boolean state) # Pede para ligar/desligar a lâmpada
  + get switch() # Retorna a posição do interruptor;

#+NAME: fig:caso_de_uso
#+CAPTION: Diagrama de caso de uso
#+ATTR_LATEX: :width \textwidth :placement [h!]
[[file:diagrama_uso.png]]


*** GUI
Uma interface gráfica para o usuário como a da figura \ref{fig:gui} é tida como meio de centralizar as informações de forma que fique acessível ao usuário. Esta será feita no raspberryPI IOs com a biblioteca Qt for python, que é uma versão alternativa ao PyQt com licensa LGPL, para caso o projeto futuramente se torne comercial.
#+NAME: fig:gui
#+CAPTION: GUI a ser implementada no RaspberryPI OS
#+ATTR_LATEX: :width \textwidth :placement [h!]
[[./gui.png]]

- Atividades de pesquisa e implementação
  TODO!!!

*** Geração de relatórios
 Esta parte do projeto consiste em trabalhar com as informações obtidas com as lâmpadas, visa calcular consumos e gerar um histrograma para o consumo de energia dos dispositivos.

- Atividades de pesquisa e implementação
  TODO!!!
